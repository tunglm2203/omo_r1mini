# Reference: http://wiki.ros.org/base_local_planner
TrajectoryPlannerROS:

  # Robot Configuration Parameters
  max_vel_x: 0.2
  min_vel_x: 0.08 # Allowing velocities too low will stop the obstacle avoidance because low velocities won't actually be high enough to move the robot
  max_vel_theta:  1.0
  min_vel_theta: -1.0
  min_in_place_vel_theta: 1.0

  acc_lim_x: 1.0
  acc_lim_y: 0.0
  acc_lim_theta: 0.4

  # Differential-drive robot configuration
  holonomic_robot: false

  # Goal Tolerance Parameters
  xy_goal_tolerance: 0.10   # [m] The tolerance for the controller in the x & y distance when achieving a goal
  yaw_goal_tolerance: 0.05  # [radian] The tolerance for the controller in yaw/rotation when achieving its goal
  latch_xy_goal_tolerance: false # If true, if the robot ever reaches the goal xy location it will simply rotate in place, even if it ends up outside the goal tolerance while it is doing so

  # Forward Simulation Parameters
  # These parameters change how the planner simulates trajectories at each update and therefore changes the optimal
  # trajectory that is chosen. These should be adjusted based on YOUR computer performance
  sim_time: 2.0  # setting time of each simulation that it must evaluate. Higher will create longer curves but too low can limit performance (<2)
  sim_granularity: 0.05 # the step size to take between points on a trajectory, or how frequent should the points on this trajectory should be examined
  angular_sim_granularity: 0.02
  vx_samples: 10  # how many samples of x velocity are taken for simulated trajectories
  vtheta_samples: 30  # how many samples of theta velocity are taken for simulated trajectories
  controller_frequency: 1.0  # [Hz] how often the planning algorithm is performed

  # Trajectory scoring parameters
  meter_scoring: true # Whether the goal_distance_bias and path_distance_bias parameters should assume that goal_distance and path_distance are expressed in units of meters or cells (Cells are default - false).
  path_distance_bias: 0.6  # The weighting for how much the controller should stay close to the path it was given (default 0.6, maximum value is 5.0)
  goal_distance_bias: 0.8 # The weighting for how much the controller should attempt to reach its local goal, also controls speed (default 0.8, maximum value is 5.0)
  occdist_scale: 0.01 # The weighting for how much the controller should attempt to avoid obstacles (default 0.01)

  heading_lookahead: 0.325  # [m] How far to look ahead when scoring different in-place-rotation trajectories
  heading_scoring: false  # Whether to score based on the robot's heading to the path or its distance from the path (default false)
  heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: true # Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false   #  debugging only, and should not be used.
  publish_cost_grid_pc: false  # Whether to publish the cost grid that the planner will use when planning.

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05 # How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1  # The distance the robot must travel before it can exit escape mode
  escape_reset_theta: 0.1  # The distance the robot must rotate before it can exit escape mode