# Reference: http://wiki.ros.org/navigation/Tutorials/RobotSetup#Costmap_Configuration_.28local_costmap.29_.26_.28global_costmap.29
#
map_type: costmap

# [Doc] The "obstacle_range" parameter determines the maximum range sensor reading that will result in an obstacle being
# put into the costmap. Here, we have it set at 2.0 meters, which means that the robot will only update its map with
# information about obstacles that are within 2.0 meters of the base. The "raytrace_range" parameter determines the
# range to which we will raytrace freespace given a sensor reading. Setting it to 3.0 meters as we have above means
# that the robot will attempt to clear out space in front of it up to 3.0 meters away given a sensor reading.
obstacle_range: 2.0   # [m] The maximum distance from the robot at which an obstacle will be inserted into the cost map
raytrace_range: 4.0   # [m] The range at which to raytrace out obstacles from the map using sensor data

# [Doc] Specifying the footprint (2D projection in ground), the center of the robot is assumed to be at (0.0, 0.0) and
#  both clockwise and counterclockwise specifications are supported.
footprint: [[-0.105, -0.105], [-0.105, 0.105], [0.041, 0.105], [0.041, -0.105]]

# [Doc] The inflation radius should be set to the maximum distance from obstacles at which a cost should be incurred.
# For example, setting the inflation radius at 0.5 meters means that the robot will treat all paths that stay
# 0.5 meters or more away from obstacles as having equal obstacle cost
inflation_radius: 0.5 # [m] controls how far away the zero cost point is from the obstacle

cost_scaling_factor: 3.0 # slope of the cost decay curve with respect to distance from the object. Lower makes robot stay further from obstacles

# [Doc] The "observation_sources" parameter defines a list of sensors that are going to be passing information to the costmap separated by spaces
observation_sources: scan
scan: {sensor_frame: base_scan, data_type: LaserScan, topic: scan, marking: true, clearing: true}
